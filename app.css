/**
 * Standards Used:
 *
 *   # Whitespace: 2 spaces
 *
 *   # Naming Convention: BEM (Block Element Modifier)
 *
 *     BEM naming convention used in order to avoid sharing same class names across modules
 *     This helps to avoid rules conflicts across the project, e.g.
 *     bold `.item` inside one module and narrow `.item` in the other one.
 *
 *     Nesting elements should be also limited to max 2-3 levels so that the structure is kept simple
 *     and remains maintainable as the project grows.
 *
 *     Examples:
 *
 *       .books {
 *         // Wrapper (Block)
 *       }
 *
 *       .books__item {
 *         // A single item (Element)
 *       }
 *
 *       .books__item--promoted {
 *         // A single promoted item (Element with Modifier)
 *       }
 *
 *    Useful References:
 *      * Single Responsibility by Drew Barantoni
 *        http://drewbarontini.com/articles/single-responsibility/
 *      * Official BEM Website
 *        http://getbem.com/introduction/
 *
 *
 *   # Ordering Properties: Alphabetical Order (ABC)
 *
 *     Since there are lots of CSS rules ordering standards out there, e.g.
 *     "layout rules first, then colors, then fonts" and there are lots of
 *     opinions out there which ones should be first, alphabetical ordering
 *     seems to be the safest option out there.
 *
 *     Example:
 *
 *       .books-list {                  << BAD (non-alphabetical order)
 *         font-weigh: bold;
 *         color: #fff;
 *       }
 *
 *       .books-list {                  << GOOD (alphabetical order)
 *         color: #fff;
 *         font-weight: bold;
 *       }
 *
 *   # Inline vs Newlines: Newlines
 *
 *     By using newlines (enter) to separate the rules we make later code reviews
 *     much easier for other developers. It is much easier to spot changes applied
 *     to your CSS when you see changes line by line rather than need to seek
 *     them whilst scrolling horizontally.
 *
 *     Example:
 *
 *       .books-list { font-size: 20px; font-weight: bold; }    << BAD (inline)

 *       .books-list {                                          << GOOD (newlines)
 *         font-size: 20px;
 *         font-weight: bold;
 *       }
 *
 *   # Responsiveness: Mobile-first
 *
 *     Mobile-first approach forces people to think about the smallest devices
 *     first and then slowly enhance the functionality as the resolution grows.
 *
 *     This sometimes means using native dropdowns (better ux), thinking about
 *     functional input types (e.g. [type="tel"], [type="number"]). It does not only
 *     help to make fit things well on the smallest devices but also make you question
 *     fancy design choices.
 */

  /**
   * Basic Styles
   */
  body {
    font-family: 'Raleway', cursive;
    margin: 0;
    min-height: 100vh; /* Expand to at least 100% of the viewport's height */
  }

  /**
   * Top Section
   */
  .top-section {
    background: url('/header.jpg') 50% center;
    background-size: cover;
    color: #fff;
    min-height: 300px;
    padding: 1em;
  }

  /**
   * Header Section
   */
  .header {
    font-weight: 200;
    margin: 0 auto 2em;
    text-align: center;
  }
  .header--emphasis {
    font-weight: 500;
  }
  @media screen and (min-width: 1024px) {
    .header {
      width: 1000px;
    }
  }

  /**
   * Promoted Books Section
   */
  .promoted-books {
  }
  .promoted-books__heading {
    margin: 0;
    text-transform: uppercase;
  }
  @media screen and (min-width: 1024px) {
    .promoted-books__heading {
      margin: 0 auto;
      width: 1000px;
    }
  }


  /**
   * Books List Section
   */
  .books-list {
    padding: 1em;
  }
  @media screen and (min-width: 1024px) {
    .books-list {
      margin: 0 auto;
      width: 1000px;
    }
  }
  .books-list__heading {
    margin: 0;
    text-transform: uppercase;
  }
  .books-list__tiles {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  @media screen and (min-width: 1024px) {
    .books-list__tiles {
      flex-direction: row;
      flex-wrap: wrap;
    }
  }



  /**
   * Book tile
   */
  .book-tile {
    background: #fff;
    border: 1px solid #efefef;
    border-radius: 3px;
    box-sizing: border-box;
    display: flex;
    font-size: .875rem; /* 14px */
    flex-direction: row;
    flex-wrap: nowrap;
    margin: 1em 0;
    padding: 2em;
    position: relative;
    width: 100%;
  }
  @media screen and (min-width: 1024px) {
    .book-tile {
      width: 49%;
    }
  }
  .book-tile__cover {
    background: #efefef;
    box-shadow: -1px 1px 0 #ccc,
                -2px 2px 0 #ccc,
                -3px 3px 0 #ccc,
                -4px 4px 0 #ccc,
                -5px 5px 0 #ccc;
    border-radius: 1px solid #efefef;
    box-sizing: border-box;
    margin: 0 3em 0 0;
  }
  .book-tile__title {
    display: block;
    font-weight: 500;
  }
  .book-tile__author-line {
    display: block;
    font-weight: 200;
  }
